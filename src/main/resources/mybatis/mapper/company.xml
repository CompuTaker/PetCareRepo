<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.test.dto.CompanyDTO">

	<!-- **주의 : 세미콜론 없이 쿼리문 작성!** -->

	<!-- 기업 리스트 보여주기-->
   <select id="listAllCompany" resultType="com.test.dto.CompanyDTO">
      select * from Company;
   </select>
   
   <select id = "countCompanyList" parameterType="java.util.Map"
      resultType="Integer">
      select count(*) from Company where company_Type = #{ company_Type }
   </select>

	<!-- 아이디와 비밀번호가 일치하는 정보 선택 -->
   <select id="listThisCompany" parameterType="java.util.Map"
      resultType="com.test.dto.CompanyDTO">
      select * from Company where company_Id = #{ id } and
      company_Password = #{ pw }
   </select>
   
   <!-- 기업 회원 아이디 찾기 -->
   <select id="searchCompanyID" 
      resultType="com.test.dto.CompanyDTO">
      select company_Id from Company where company_Number = #{ company_Number }
   </select>
   
   <!-- userId와 userPw는 실제 컬럼명, 여기선 map 객체인 user에 저장된 key값들인 id와 pw로 값 찾아내 
      적어준 것일 뿐 user.id, user.pw, 이렇게 하는 건, 객체를 user란 이름의 객체를 넘겨주어, VO 혹은 DTO로 get해주는 
      방식이었던 것 -->
      
      
    <!-- 기업 회원 아이디 선택하기 -->
 	<select id="companyId" parameterType="java.util.Map"
		resultType="com.test.dto.CompanyDTO">
		select company_Id from Company where company_Id = #{company_Id}
	</select>
	
	<!-- 기업 번호 선택하기 -->
	 <select id="companyNumber"  parameterType="java.util.Map"
		resultType="com.test.dto.CompanyDTO">
		select company_Number from Company where company_Number = #{company_Number}
	</select>
	
	<!-- 기업 회원 비밀번호 찾기 -->
	<select id="searchCompanyPW" parameterType="java.util.Map"
		resultType="com.test.dto.CompanyDTO">
		select * from Company where company_UserName =
		#{company_UserName}
		and
		company_Id = #{company_Id}
		and
		company_UserPhoneNumber = #{company_UserPhoneNumber}
	</select>
   
   
   <!-- 인덱스로 해당 기업 정보 찾아오기 -->
   <select id="listThisCompanyByIdx" resultType="com.test.dto.CompanyDTO">
      select * from Company where company_Index = #{company_Index}
   </select>
   
   
    <!-- 기업 회원 등록하기 -->
    <insert id="insertTheCompany" parameterType="java.util.Map">
      <![CDATA[insert into Company
      (company_Index, company_Id, company_Password, company_UserName,
      company_ResidentNumber, company_Address, company_Email,
      company_UserPhoneNumber, company_Name, company_Number, company_Type,
      company_Image)
      values
      (#{company_Index}, #{company_Id}, #{company_Password},
      #{company_UserName},#{company_ResidentNumber}, #{company_Address},
      #{company_Email}, #{company_UserPhoneNumber}, #{company_Name},
      #{company_Number }, #{company_Type},#{company_Image})
      ]]>
   </insert>
   
   <!-- 기업 회원 삭제하기 -->
   <delete id="deleteTheCompany">
      delete from Company where company_Index = #{ company_Index }
   </delete>
   
   <!-- 기업타입(미용, 호텔, 병원)으로 해당 기업들 가져오기 -->
   <select id="listsCompany" parameterType="java.util.Map"
      resultType="com.test.dto.CompanyDTO">
      select * from Company where company_Type = #{ company_Type }
      limit #{pageStart}, #{perPageNum}
   </select>
   
   
   <!-- 기업 정보 수정하기 -->
	<update id = "updateCompanyInfo" parameterType="java.util.Map">
		update Company
		set company_Password=#{company_Password},
		company_UserName = #{company_UserName},
		company_ResidentNumber = #{company_ResidentNumber},
		company_Address = #{company_Address},
		company_Email = #{company_Email},
		company_Name = #{company_Name},
		company_UserPhoneNumber = #{company_UserPhoneNumber},
		company_Type=#{company_Type},
		company_Image=#{company_Image}
		where company_Id = #{company_Id} and
		company_Number = #{company_Number}
		
	</update>
     <!-- 기업명으로 해당 기업 정보 찾아오기 -->
   <select id="listThisCompanyByName" resultType="com.test.dto.CompanyDTO">
      select * from Company where company_Name like CONCAT('%', #{company_Name}, '%')
   </select>
   
   </mapper>
