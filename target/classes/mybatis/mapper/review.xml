<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.test.dto.ReviewDTO">

	<!-- **주의 : 세미콜론 없이 쿼리문 작성!** -->

	<!-- 자신이 작성한 리뷰 리스트 보여주기 -->
	<select id="listMyReviews" parameterType="java.util.Map"
		resultType="com.test.dto.ReviewDTO">
		select * from Review
		where customer_id = #{customer_id}
	</select>

	<!-- 선택한 기업의 리뷰 리스트 보여주기 -->
	<select id="listItsReviews" parameterType="java.util.Map"
		resultType="com.test.dto.ReviewDTO">
		select *
		from Review
		where company_Index = #{company_Index}

	</select>

<!-- 후기 데이터 총 갯수 -->
	<select id="countReviewList" parameterType="java.util.Map" resultType="Integer">
		select count(*) from Review
		
	</select>

	<!-- 검색어 후기 데이터 총 갯수 -->
	<select id="countReviewByTerm" parameterType="java.util.Map"  resultType="Integer">
		select count(*) from Review
		 where review_Title like CONCAT('%', #{term}, '%') 
      or
      review_Content like CONCAT('%', #{term}, '%') 
      or
      customer_id like CONCAT('%', #{term}, '%') 
		
	</select>


	<!-- customer name 찾기 -->
	<select id="searchCustomerName"
		resultType="com.test.dto.CustomerDTO">
		select customer_Name
		from Customer
		JOIN Review
		on Customer.customer_Id = Review.customer_id
		where Review.customer_id = #{customer_id}
	</select>

	<!-- 인덱스 번호로 리뷰 찾기 -->
	<select id="listThisReviewByIdx"
		resultType="com.test.dto.ReviewDTO">
		select * from Review where review_Index = #{review_Index}
	</select>

	<!-- reservation_Index로 리뷰 이미지 찾기 -->
	<select id="listImages" resultType="com.test.dto.ReviewImageDTO">
		select * from ReviewImage where reservation_Index = #{reservation_Index}
	</select>


	<!-- 리뷰 등록하기 -->
	<insert id="insertTheReview" parameterType="java.util.Map">
		insert into
		Review
		(
		company_Index,
		review_Title,
		review_Content,
		review_Rating,
		customer_id,
		reservation_Index)
		values(#{company_Index},#{review_Title},
		#{review_Content},
		#{review_Rating},
		#{customer_id},
		#{reservation_Index})
	</insert>

	<!-- 리뷰이미지 등록하기 -->
	<insert id="insertTheReviewImage" parameterType="java.util.Map">
		insert into
		ReviewImage
		(
		image_Index,
		image_Url,
		reservation_Index
		)
		values(
		#{image_Index},
		#{image_Url},
		#{reservation_Index}
		)
	</insert>

	<!-- 리뷰 삭제하기 -->
	<delete id="deleteTheReview">
		delete from Review
		where review_Index =
		#{review_Index}
	</delete>

	<!-- 리뷰 답글 달기 -->
	<update id="updateTheComent" parameterType="java.util.Map">
		update Review set
		review_Comment =
		#{review_Comment}
		where review_Index =
		#{review_Index}
	</update>
	<!-- 리뷰 답글 삭제하기 -->
	<update id="deleteTheComent" parameterType="Integer">
		update Review set review_Comment = null 
		where review_Index =
		#{review_Index}
	</update>

	<!-- 리뷰 리스트 보여주기-->
   <select id="listAllReviews" resultType="com.test.dto.ReviewDTO">
      select * from Review
      order by review_Index DESC
      limit #{pageStart}, #{perPageNum}
   </select>
   
         <!-- 검색어로 리뷰 찾아오기 -->
   <select id="listThisReviewByTerm" parameterType="java.util.Map" 
   resultType="com.test.dto.ReviewDTO">
      select * from Review 
      left join Customer
      on Review.customer_Id = Customer.customer_Id
      where review_Title like CONCAT('%', #{term}, '%') 
      or
      review_Content like CONCAT('%', #{term}, '%') 
      or
      Customer.customer_Name like CONCAT('%', #{term}, '%') 
      limit #{pageStart}, #{perPageNum}
   </select>

	<!-- 후기수정하기 (제목, 내용) -->
	<update id="updateTheReview" parameterType="java.util.Map">
		update Review
		set review_Title = #{ review_Title },
		review_Content = #{ review_Content },
		review_Rating = #{ review_Rating }
		where review_Index = #{ review_Index }
	</update>
	
	<!-- 후기수정하기 (이미지) 삭제부분-->
	<delete id="deleteTheReviewImage" parameterType="java.util.Map">
		delete from ReviewImage 
		where reservation_Index = #{ reservation_Index };
	</delete>
	
</mapper>
